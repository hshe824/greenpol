                                                                                                                     
######### things to do ##########
note that the precision on these scans is not perfect, figure 
out what precision is required, i think its coming from rounding errors and conversion between cts and degrees.


code to keep telescope from pointing below horizon may need higher limit than 0

it might be possible/better to combine the forward and backward passes into one block of code, use -1**i and a list for min/max az then do list[i % 2] or something like that (scan.py: linearScan() & horizontalScan())



figure out if there is a better way to convert az el coordinates outputted by ephem into degrees(planets.py)

put in logic that allows for different scan times at each elevation(scan.py: azScan())


Think about how best to display ouput, and what output we want to display (gui related)

figure out how to better adjust layout, its weird right now (gui related)

why does the output frame only put text in the middle....?? (gui.py)

put in some logic to azScan to accept hours instead of seconds for tscan, maybe change the default to hours, then if input is less than one, have some logic to convert that to seconds, or maybe timdelta can just handle that. or have an option to do either and you have to specify at input, maybe a checkbox (scan.py, azScan)


#create an error message text box in gui, for things like elevation safety controls

set speed/accelaration as a variable in gui, save parameters to file


have hardware safety parameters, stop, dont change el past a certain point

galil commands that will never change (AC/DC) can be set at beginning of gui.py, rather than in each move function, so what is never going to change?

get_pointing.py is set up to write files every minute, logic will need to change if we want files more frequently


## bugs



code thinks elevation axis is done moving before it actually is

galil and encoder position values loose sync with one another, this could propagate over time causing innacurate pointing.



counts to degree conversion for elevation axis is not quite right, figure out the right value

forward/backward pass # comments are incorrect, jumps from 1 to 3, figure out the right way to do this(scan.py: linearScan() & horizontalScan())



## more relavent:


add functionality to find offsets (arrow keys that step in some defined increment, update offset each time you move, 
so when you find the correct pointing the offset is however much you have moved, maybe do this in a seperate 
notebook tab)



add ability to plot 2D color plot - az vs el with color scale for signal - realtime + acq_tel data

add ability to plot az vs time vs signal for science data (2D color plot) - acq_tel data



go through code and make sure comments are up to date and sufficiently descriptive

make helical scan pattern option

add cryogenic feedback info, update after each file is produced, average over file

incorporate functionality from peters notebook


